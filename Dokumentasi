Membuat Form Tambah Data


============================

baru bikin form doang :

intinya :

 public function create() sama 

    public function store(Request $request)   //(POST)

===================================

route nya : 

<?php

use App\Http\Controllers\PostController;
use Illuminate\Support\Facades\Route;


/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

Route::get('/', function () {
    return view('welcome');
});

Route::resource('PostController', PostController::class);


==================================

controller : 

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class PostController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
         $blogPosts = $this->readBlogPostsFromFile(resource_path('data/data.txt'));


         return view('Post.index', compact('blogPosts'));
    }

    private function readBlogPostsFromFile($filePath)
{
    $posts = [];
    $lines = file($filePath, FILE_IGNORE_NEW_LINES);


    for ($i = 0; $i < count($lines); $i += 4) {
        $posts[] = [
            'id' => $lines[$i],
            'title' => $lines[$i + 1],
            'content' => $lines[$i + 2],
            'tanggal' => $lines[$i + 3]
        ];
    }
    //  dd($posts);

    return $posts;
}

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('Post.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        echo "test";


    }


    private function saveDataToFile($data)
{
    $filePath = storage_path('app/data.txt');

    // Baca data yang sudah ada dari file
    $existingData = $this->readDataFromFile();

    // Tambahkan data baru ke array
    $allData = array_merge($existingData, [$data]);

    // Simpan data ke file
    file_put_contents($filePath, json_encode($allData));
}

private function readDataFromFile()
{
    $filePath = storage_path('app/data.txt');

    if (file_exists($filePath)) {
        $data = json_decode(file_get_contents($filePath), true);
        return $data ? $data : [];
    } else {
        return [];
    }
}


    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $blogPosts = $this->readBlogPostsFromFile(resource_path('data/data.txt'));



        $post = null;
        foreach ($blogPosts as $p) {
            if ($p['id'] == $id) {
                $post = $p;

                break;
            }
        }

        if ($post) {
            // Jika post ditemukan, kirim data ke view
            return view('Post.show', compact('post'));
        } else {
            // Jika post tidak ditemukan, tampilkan halaman error 404
            return view('Post.errors');
        }
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}


============================================

create.blade.php




@section('content')
    <div class="container">
        <h1>Tambah Data</h1>

        <form action="{{ route('PostController.store') }}" method="POST">
        @csrf

        <div class="form-group">
                <label for="id">id</label>
                <input type="text" class="form-control" id="id" name="id" required>
            </div>

            <div class="form-group">
                <label for="title">title</label>
                <input type="text" class="form-control" id="title" name="title" required>
            </div>

            <div class="form-group">
                <label for="content">content</label>
                <input type="text" class="form-control" id="content" name="content" required>
            </div>

            <div class="form-group">
                <label for="tanggal"></label>
                <input type="text" class="form-control" id="tanggal" name="tanggal" required>
            </div>



            <button type="submit" class="btn btn-primary">Simpan</button>
        </form>
    </div>




================================================
